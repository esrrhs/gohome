// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.3
// source: frame.proto

package network

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FrameData_TYPE int32

const (
	FrameData_USER_DATA FrameData_TYPE = 0
	FrameData_CONN      FrameData_TYPE = 1
	FrameData_CONNRSP   FrameData_TYPE = 2
	FrameData_CLOSE     FrameData_TYPE = 3
	FrameData_HB        FrameData_TYPE = 4
)

// Enum value maps for FrameData_TYPE.
var (
	FrameData_TYPE_name = map[int32]string{
		0: "USER_DATA",
		1: "CONN",
		2: "CONNRSP",
		3: "CLOSE",
		4: "HB",
	}
	FrameData_TYPE_value = map[string]int32{
		"USER_DATA": 0,
		"CONN":      1,
		"CONNRSP":   2,
		"CLOSE":     3,
		"HB":        4,
	}
)

func (x FrameData_TYPE) Enum() *FrameData_TYPE {
	p := new(FrameData_TYPE)
	*p = x
	return p
}

func (x FrameData_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameData_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_frame_proto_enumTypes[0].Descriptor()
}

func (FrameData_TYPE) Type() protoreflect.EnumType {
	return &file_frame_proto_enumTypes[0]
}

func (x FrameData_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameData_TYPE.Descriptor instead.
func (FrameData_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_frame_proto_rawDescGZIP(), []int{0, 0}
}

type Frame_TYPE int32

const (
	Frame_DATA Frame_TYPE = 0
	Frame_REQ  Frame_TYPE = 1
	Frame_ACK  Frame_TYPE = 2
	Frame_PING Frame_TYPE = 3
	Frame_PONG Frame_TYPE = 4
)

// Enum value maps for Frame_TYPE.
var (
	Frame_TYPE_name = map[int32]string{
		0: "DATA",
		1: "REQ",
		2: "ACK",
		3: "PING",
		4: "PONG",
	}
	Frame_TYPE_value = map[string]int32{
		"DATA": 0,
		"REQ":  1,
		"ACK":  2,
		"PING": 3,
		"PONG": 4,
	}
)

func (x Frame_TYPE) Enum() *Frame_TYPE {
	p := new(Frame_TYPE)
	*p = x
	return p
}

func (x Frame_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frame_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_frame_proto_enumTypes[1].Descriptor()
}

func (Frame_TYPE) Type() protoreflect.EnumType {
	return &file_frame_proto_enumTypes[1]
}

func (x Frame_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frame_TYPE.Descriptor instead.
func (Frame_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_frame_proto_rawDescGZIP(), []int{1, 0}
}

type FrameData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Compress      bool                   `protobuf:"varint,3,opt,name=compress,proto3" json:"compress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameData) Reset() {
	*x = FrameData{}
	mi := &file_frame_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameData) ProtoMessage() {}

func (x *FrameData) ProtoReflect() protoreflect.Message {
	mi := &file_frame_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameData.ProtoReflect.Descriptor instead.
func (*FrameData) Descriptor() ([]byte, []int) {
	return file_frame_proto_rawDescGZIP(), []int{0}
}

func (x *FrameData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FrameData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FrameData) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

type Frame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Resend        bool                   `protobuf:"varint,2,opt,name=resend,proto3" json:"resend,omitempty"`
	Sendtime      int64                  `protobuf:"varint,3,opt,name=sendtime,proto3" json:"sendtime,omitempty"`
	Id            int32                  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Data          *FrameData             `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Dataid        []int32                `protobuf:"varint,6,rep,packed,name=dataid,proto3" json:"dataid,omitempty"`
	Acked         bool                   `protobuf:"varint,7,opt,name=acked,proto3" json:"acked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Frame) Reset() {
	*x = Frame{}
	mi := &file_frame_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_frame_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_frame_proto_rawDescGZIP(), []int{1}
}

func (x *Frame) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Frame) GetResend() bool {
	if x != nil {
		return x.Resend
	}
	return false
}

func (x *Frame) GetSendtime() int64 {
	if x != nil {
		return x.Sendtime
	}
	return 0
}

func (x *Frame) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Frame) GetData() *FrameData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Frame) GetDataid() []int32 {
	if x != nil {
		return x.Dataid
	}
	return nil
}

func (x *Frame) GetAcked() bool {
	if x != nil {
		return x.Acked
	}
	return false
}

var File_frame_proto protoreflect.FileDescriptor

const file_frame_proto_rawDesc = "" +
	"\n" +
	"\vframe.proto\"\x90\x01\n" +
	"\tFrameData\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x1a\n" +
	"\bcompress\x18\x03 \x01(\bR\bcompress\"?\n" +
	"\x04TYPE\x12\r\n" +
	"\tUSER_DATA\x10\x00\x12\b\n" +
	"\x04CONN\x10\x01\x12\v\n" +
	"\aCONNRSP\x10\x02\x12\t\n" +
	"\x05CLOSE\x10\x03\x12\x06\n" +
	"\x02HB\x10\x04\"\xe5\x01\n" +
	"\x05Frame\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x16\n" +
	"\x06resend\x18\x02 \x01(\bR\x06resend\x12\x1a\n" +
	"\bsendtime\x18\x03 \x01(\x03R\bsendtime\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\x05R\x02id\x12\x1e\n" +
	"\x04data\x18\x05 \x01(\v2\n" +
	".FrameDataR\x04data\x12\x16\n" +
	"\x06dataid\x18\x06 \x03(\x05R\x06dataid\x12\x14\n" +
	"\x05acked\x18\a \x01(\bR\x05acked\"6\n" +
	"\x04TYPE\x12\b\n" +
	"\x04DATA\x10\x00\x12\a\n" +
	"\x03REQ\x10\x01\x12\a\n" +
	"\x03ACK\x10\x02\x12\b\n" +
	"\x04PING\x10\x03\x12\b\n" +
	"\x04PONG\x10\x04B\fZ\n" +
	"./;networkb\x06proto3"

var (
	file_frame_proto_rawDescOnce sync.Once
	file_frame_proto_rawDescData []byte
)

func file_frame_proto_rawDescGZIP() []byte {
	file_frame_proto_rawDescOnce.Do(func() {
		file_frame_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_frame_proto_rawDesc), len(file_frame_proto_rawDesc)))
	})
	return file_frame_proto_rawDescData
}

var file_frame_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_frame_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_frame_proto_goTypes = []any{
	(FrameData_TYPE)(0), // 0: FrameData.TYPE
	(Frame_TYPE)(0),     // 1: Frame.TYPE
	(*FrameData)(nil),   // 2: FrameData
	(*Frame)(nil),       // 3: Frame
}
var file_frame_proto_depIdxs = []int32{
	2, // 0: Frame.data:type_name -> FrameData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_frame_proto_init() }
func file_frame_proto_init() {
	if File_frame_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_frame_proto_rawDesc), len(file_frame_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frame_proto_goTypes,
		DependencyIndexes: file_frame_proto_depIdxs,
		EnumInfos:         file_frame_proto_enumTypes,
		MessageInfos:      file_frame_proto_msgTypes,
	}.Build()
	File_frame_proto = out.File
	file_frame_proto_goTypes = nil
	file_frame_proto_depIdxs = nil
}
